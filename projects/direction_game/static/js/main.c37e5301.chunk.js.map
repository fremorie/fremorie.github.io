{"version":3,"sources":["actions/index.js","reducers/index.js","constants/index.js","utils/index.js","components/Ground/index.js","components/Fish/index.js","components/Formation/index.js","components/Bubbles/index.js","components/SeaWeed/index.js","components/Aquarium/index.js","App.js","index.js","store.js","components/SeaWeed/algea.svg"],"names":["createActions","_createActions","Object","defineProperty","payload","action","testAction","processAnswer","handleActions","_handleActions","state","smth","_ref","scoreBoard","concat","toConsumableArray","INITIAL_STATE","level","ARROWS","40","39","38","37","getRandomInt","max","Math","floor","random","DIRECTION","UP","DOWN","LEFT","RIGHT","DIRECTION_NAMES","keys","Ground","_ref$algaeCount","algaeCount","algaes","Array","fill","react_default","a","createElement","className","map","algae","index","j","key","Fish","direction","react","Formation","formation","row","i","components_Fish","Bubbles","bubblesCount","bubbles","bubble","SeaWeed","_ref$algeasCount","algeasCount","algeas","seaweed","src","height","width","algea","enhance","compose","connect","_ref2","dispatch","processAnswerAction","withProps","_generateFormation","nRows","maxItemsPerRow","generalDirectionIndex","generalDirection","availableDirections","filter","targetDirectionIndex","length","targetDirection","centralRow","console","log","itemsInRow","centralItemIndex","splice","push","generateFormation","withHandlers","onKeyDown","_ref3","e","arrowKeyPressed","keyCode","toString","hasOwnProperty","isAnswerCorrect","document","querySelector","classList","remove","offsetWidth","add","_ref$bubblesCount","tabIndex","components_Bubbles","components_Formation","components_Ground","components_SeaWeed","correctAnswers","Boolean","total","simpleAction","components_Aquarium","ReactDOM","render","es","store","initialState","arguments","undefined","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","src_App_0","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c37e5301.chunk.js","sourcesContent":["// @flow\n\nimport {createActions, action} from 'typed-actions';\n\nexport const TEST_ACTION = 'game/TEST_ACTION';\nexport const PROCESS_ANSWER = 'game/PROCESS_ANSWER';\n\nlet actions;\n\nexport const {\n    [TEST_ACTION]: testAction,\n    [PROCESS_ANSWER]: processAnswer,\n} = (actions = createActions({\n    [TEST_ACTION]: (payload: string) => action(payload),\n    [PROCESS_ANSWER]: (payload: string) => action(payload),\n}));\n\nexport type Actions = typeof actions;\n","// @flow\n\nimport {handleActions, type Handlers} from 'typed-actions/immer';\n\nimport {\n    type Actions, TEST_ACTION,\n} from '../actions';\n\nimport {PROCESS_ANSWER} from '../actions';\n\nexport default handleActions(\n    ({\n        [TEST_ACTION]: state => {\n            state.smth = 'ololo';\n        },\n        [PROCESS_ANSWER]: (state, {payload}) => {\n            state.scoreBoard = [...state.scoreBoard, payload];\n        },\n    }: Handlers<*, Actions>),\n);\n","// @flow\n\nimport type {InitialState} from '../types';\n\nexport const INITIAL_STATE: InitialState = {\n    level: 0,\n    scoreBoard: [],\n};\n\nexport const ARROWS = {\n    '40': 'DOWN',\n    '39': 'RIGHT',\n    '38': 'UP',\n    '37': 'LEFT',\n};\n\nexport const BUBBLES_COUNT = 10;\n\nexport const ALGEAS_COUNT = 5;\n\nexport const FORMATIONS_PER_LEVEL = 10;\n","// @flow\n\nexport const getRandomInt = max => Math.floor(Math.random() * Math.floor(max));\n\nconst DIRECTION = {\n    UP: 'UP',\n    DOWN: 'DOWN',\n    LEFT: 'LEFT',\n    RIGHT: 'RIGHT',\n};\n\nconst DIRECTION_NAMES = Object.keys(DIRECTION);\n\nexport const generateFormation = ({nRows, maxItemsPerRow}) => {\n    const formation = [];\n\n    const generalDirectionIndex = getRandomInt(4);\n    const generalDirection = DIRECTION[DIRECTION_NAMES[generalDirectionIndex]];\n\n    const availableDirections = DIRECTION_NAMES.filter(direction => direction !== generalDirection);\n    const targetDirectionIndex = getRandomInt(availableDirections.length - 1);\n\n    const targetDirection = DIRECTION[availableDirections[targetDirectionIndex]];\n\n    const centralRow = Math.floor(nRows / 2);\n    console.log({centralRow, targetDirection, generalDirection, availableDirections, targetDirectionIndex});\n\n    for (let i = 0; i < nRows; i++) {\n        const itemsInRow = Math.floor(getRandomInt(maxItemsPerRow) / 2) * 2 + 1;\n        const row = new Array(itemsInRow).fill(generalDirection);\n\n        if (i === centralRow) {\n            const centralItemIndex = Math.floor(itemsInRow / 2);\n            console.log({centralItemIndex, centralRow});\n            row.splice(centralItemIndex, 1, targetDirection);\n        }\n\n        formation.push(row);\n    }\n\n    return {formation, targetDirection};\n};\n","// @flow\nimport React from 'react';\n\nimport {getRandomInt} from '../../utils';\n\nimport './styles.scss';\n\nconst Ground = ({algaeCount = 10}) => {\n    const algaes = new Array(algaeCount).fill(0);\n\n    return (\n        <div className=\"ground\">\n            <div className=\"algaes\">\n                {algaes.map((algae, index) => {\n                    const j = getRandomInt(algaeCount);\n                    return <div key={index} className={`algae aalgae-${j}`}/>;\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default Ground;\n","// @flow\nimport React, {Fragment} from 'react';\nimport './styles.scss';\n\ntype Props = {\n    direction: string,\n};\n\nconst Fish = ({direction}: Props) => (\n    <Fragment>\n        <div className={`fish ${direction}`} />\n    </Fragment>\n);\n\nexport default Fish;\n","// @flow\nimport React from 'react';\n\nimport './styles.scss';\n\nimport Fish from '../Fish';\n\nconst Formation = ({formation}) => {\n    return (\n        <div className=\"formation animated\">\n            {formation.map((row, i) => (\n                <div key={i} className=\"row\">\n                    {row.map((direction, j) => (\n                        <Fish key={j} direction={direction} />\n                    ))}\n                </div>\n            ))}\n        </div>\n    )\n};\n\nexport default Formation;\n","// @flow\nimport React from 'react';\n\n// utils\nimport {getRandomInt} from '../../utils';\n\n// styles\nimport './styles.scss';\n\ntype Props = {\n    bubblesCount: number,\n};\n\nconst Bubbles = ({bubblesCount}: Props) => {\n    const bubbles = new Array(bubblesCount).fill(0);\n\n    return (\n        <div className=\"bubbles\">\n            {\n                bubbles.map((bubble, index) =>\n                    <div key={index} className={`bubble bubble-${getRandomInt(bubblesCount)}`}/>\n                )\n            }\n        </div>\n    );\n};\n\nexport default Bubbles;\n","// @flow\nimport React from 'react';\n\nimport {ALGEAS_COUNT} from '../../constants';\nimport {getRandomInt} from '../../utils';\n\nimport './styles.scss';\nimport seaweed from './algea.svg';\n\ntype Props = {\n    algeasCount: number,\n};\n\nconst SeaWeed = ({algeasCount = ALGEAS_COUNT}: Props) => {\n    const algeas = new Array(algeasCount).fill(0);\n\n    return (\n        <div className=\"seaWeed\">\n            {seaweed}\n            <img src=\"./algea.svg\" height=\"100\" width=\"100\" />\n            {\n                algeas.map((algea, index) =>\n                    <div key={index} className={`algea algea-${getRandomInt(algeasCount)}`}/>\n                )\n            }\n        </div>\n    );\n};\n\nexport default SeaWeed;\n","// @flow\nimport React, {type Node} from 'react';\nimport {withHandlers, withProps, compose} from 'recompose';\nimport {connect} from 'react-redux';\n\n// utils\nimport {generateFormation} from '../../utils';\nimport type {InitialState} from '../../types';\nimport {ARROWS, BUBBLES_COUNT} from '../../constants';\n\n// actions\nimport {processAnswer as processAnswerAction} from '../../actions';\n\n// components\nimport Ground from '../Ground';\nimport Formation from '../Formation';\nimport Bubbles from '../Bubbles';\nimport SeaWeed from '../SeaWeed';\n\n// styles\nimport './styles.scss';\n\ntype MappedProps = {\n    level: number,\n    scoreBoard: boolean[],\n};\n\ntype EnhancedProps = MappedProps & {\n    processAnswer: () => void,\n    formation: string[],\n    targetDirection: string,\n    formationCss: string,\n}\n\ntype Props = {\n    bubblesCount: number,\n    children: Node[],\n} & EnhancedProps;\n\nconst Aquarium = ({bubblesCount = BUBBLES_COUNT, formation, onKeyDown}: Props) => {\n    return (\n        <div className=\"aquarium\" tabIndex=\"0\" onKeyDown={onKeyDown}>\n            <Bubbles bubblesCount={bubblesCount} />\n            <Formation formation={formation} />\n            <Ground />\n            <SeaWeed />\n        </div>\n    );\n};\n\nconst mapStateToProps = ({level, scoreBoard}: InitialState): MappedProps => ({\n    level,\n    scoreBoard,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    processAnswer: payload => dispatch(processAnswerAction(payload)),\n});\n\nconst enhance = compose(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n    ),\n    withProps(() => {\n        const {formation, targetDirection} = generateFormation({nRows: 7, maxItemsPerRow: 7});\n\n        return {\n            formation,\n            targetDirection,\n        }\n    }),\n    withHandlers({\n        onKeyDown: ({processAnswer, targetDirection}) => e => {\n            const arrowKeyPressed = e.keyCode.toString();\n\n            if (ARROWS.hasOwnProperty(arrowKeyPressed)) {\n                const isAnswerCorrect = ARROWS[arrowKeyPressed] === targetDirection;\n                processAnswer(isAnswerCorrect);\n\n                // delete and add class to restart the formation animation\n                const formation = document.querySelector('.formation');\n                formation.classList.remove('animated');\n                void formation.offsetWidth;\n                formation.classList.add('animated');\n            }\n        },\n    })\n);\n\nexport default enhance(Aquarium);\n","// @flow\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport {testAction} from './actions';\n\n// components\nimport Aquarium from './components/Aquarium';\n\nconst App = ({correctAnswers, total}) => {\n    return (\n        <div className=\"Game\">\n            <Aquarium />\n            <div className=\"Score\">\n                Current Score: {correctAnswers}/{total}\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    correctAnswers: state.scoreBoard.filter(Boolean).length,\n    total: state.scoreBoard.length,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    simpleAction: () => dispatch(testAction())\n});\n\nconst enhance = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n);\n\nexport default enhance(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\nimport './index.css';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// registerServiceWorker();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport {INITIAL_STATE} from './constants';\n\nexport default function configureStore(initialState=INITIAL_STATE) {\n    return createStore(\n        reducers,\n        initialState,\n        // applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    );\n}\n","module.exports = __webpack_public_path__ + \"static/media/algea.e01b3ecf.svg\";"],"sourceRoot":""}